{
  "DEPTH_BUFFER_BIT": {
    "value": 256,
    "comment": "Clearing buffers: Passed to clear to clear the current depth buffer."
  },
  "STENCIL_BUFFER_BIT": {
    "value": 1024,
    "comment": "Clearing buffers: Passed to clear to clear the current stencil buffer."
  },
  "COLOR_BUFFER_BIT": {
    "value": 16384,
    "comment": "Clearing buffers: Passed to clear to clear the current color buffer."
  },
  "POINTS": {
    "value": 0,
    "comment": "Rendering primitives: Passed to drawElements or drawArrays to draw single points."
  },
  "LINES": {
    "value": 1,
    "comment": "Rendering primitives: Passed to drawElements or drawArrays to draw lines. Each vertex connects to the one after it."
  },
  "LINE_LOOP": {
    "value": 2,
    "comment": "Rendering primitives: Passed to drawElements or drawArrays to draw lines. Each set of two vertices is treated as a separate line segment."
  },
  "LINE_STRIP": {
    "value": 3,
    "comment": "Rendering primitives: Passed to drawElements or drawArrays to draw a connected group of line segments from the first vertex to the last."
  },
  "TRIANGLES": {
    "value": 4,
    "comment": "Rendering primitives: Passed to drawElements or drawArrays to draw triangles. Each set of three vertices creates a separate triangle."
  },
  "TRIANGLE_STRIP": {
    "value": 5,
    "comment": "Rendering primitives: Passed to drawElements or drawArrays to draw a connected group of triangles."
  },
  "TRIANGLE_FAN": {
    "value": 6,
    "comment": "Rendering primitives: Passed to drawElements or drawArrays to draw a connected group of triangles. Each vertex connects to the previous and the first vertex in the fan."
  },
  "ZERO": {
    "value": 0,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to turn off a component."
  },
  "ONE": { "value": 1, "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to turn on a component." },
  "SRC_COLOR": {
    "value": 768,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to multiply a component by the source elements color."
  },
  "ONE_MINUS_SRC_COLOR": {
    "value": 769,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source elements color."
  },
  "SRC_ALPHA": {
    "value": 770,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to multiply a component by the source's alpha."
  },
  "ONE_MINUS_SRC_ALPHA": {
    "value": 771,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source's alpha."
  },
  "DST_ALPHA": {
    "value": 772,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's alpha."
  },
  "ONE_MINUS_DST_ALPHA": {
    "value": 773,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's alpha."
  },
  "DST_COLOR": {
    "value": 774,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's color."
  },
  "ONE_MINUS_DST_COLOR": {
    "value": 775,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's color."
  },
  "SRC_ALPHA_SATURATE": {
    "value": 776,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to multiply a component by the minimum of source's alpha or one minus the destination's alpha."
  },
  "CONSTANT_COLOR": {
    "value": 32769,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to specify a constant color blend function."
  },
  "ONE_MINUS_CONSTANT_COLOR": {
    "value": 32770,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to specify one minus a constant color blend function."
  },
  "CONSTANT_ALPHA": {
    "value": 32771,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to specify a constant alpha blend function."
  },
  "ONE_MINUS_CONSTANT_ALPHA": {
    "value": 32772,
    "comment": "Blending modes: Passed to blendFunc or blendFuncSeparate to specify one minus a constant alpha blend function."
  },
  "FUNC_ADD": {
    "value": 32774,
    "comment": "Blending equations: Passed to blendEquation or blendEquationSeparate to set an addition blend function."
  },
  "FUNC_SUBTRACT": {
    "value": 32778,
    "comment": "Blending equations: Passed to blendEquation or blendEquationSeparate to specify a subtraction blend function (source - destination)."
  },
  "FUNC_REVERSE_SUBTRACT": {
    "value": 32779,
    "comment": "Blending equations: Passed to blendEquation or blendEquationSeparate to specify a reverse subtraction blend function (destination - source)."
  },
  "BLEND_EQUATION": {
    "value": 32777,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current RGB blend function."
  },
  "BLEND_EQUATION_RGB": {
    "value": 32777,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current RGB blend function. Same as BLEND_EQUATION"
  },
  "BLEND_EQUATION_ALPHA": {
    "value": 34877,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current alpha blend function. Same as BLEND_EQUATION"
  },
  "BLEND_DST_RGB": {
    "value": 32968,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current destination RGB blend function."
  },
  "BLEND_SRC_RGB": {
    "value": 32969,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current destination RGB blend function."
  },
  "BLEND_DST_ALPHA": {
    "value": 32970,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current destination alpha blend function."
  },
  "BLEND_SRC_ALPHA": {
    "value": 32971,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current source alpha blend function."
  },
  "BLEND_COLOR": {
    "value": 32773,
    "comment": "Getting GL parameter information: Passed to getParameter to return a the current blend color."
  },
  "ARRAY_BUFFER_BINDING": {
    "value": 34964,
    "comment": "Getting GL parameter information: Passed to getParameter to get the array buffer binding."
  },
  "ELEMENT_ARRAY_BUFFER_BINDING": {
    "value": 34965,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current element array buffer."
  },
  "LINE_WIDTH": {
    "value": 2849,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current lineWidth (set by the lineWidth method)."
  },
  "ALIASED_POINT_SIZE_RANGE": {
    "value": 33901,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current size of a point drawn with GL_POINTS"
  },
  "ALIASED_LINE_WIDTH_RANGE": {
    "value": 33902,
    "comment": "Getting GL parameter information: Passed to getParameter to get the range of available widths for a line. Returns a length-2 array with the lo value at 0, and hight at 1."
  },
  "CULL_FACE_MODE": {
    "value": 2885,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current value of cullFace. Should return FRONT, BACK, or FRONT_AND_BACK"
  },
  "FRONT_FACE": {
    "value": 2886,
    "comment": "Getting GL parameter information: Passed to getParameter to determine the current value of frontFace. Should return CW or CCW."
  },
  "DEPTH_RANGE": {
    "value": 2928,
    "comment": "Getting GL parameter information: Passed to getParameter to return a length-2 array of floats giving the current depth range."
  },
  "DEPTH_WRITEMASK": {
    "value": 2930,
    "comment": "Getting GL parameter information: Passed to getParameter to determine if the depth write mask is enabled."
  },
  "DEPTH_CLEAR_VALUE": {
    "value": 2931,
    "comment": "Getting GL parameter information: Passed to getParameter to determine the current depth clear value."
  },
  "DEPTH_FUNC": {
    "value": 2932,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current depth function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL."
  },
  "STENCIL_CLEAR_VALUE": {
    "value": 2961,
    "comment": "Getting GL parameter information: Passed to getParameter to get the value the stencil will be cleared to."
  },
  "STENCIL_FUNC": {
    "value": 2962,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current stencil function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL."
  },
  "STENCIL_FAIL": {
    "value": 2964,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current stencil fail function. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP."
  },
  "STENCIL_PASS_DEPTH_FAIL": {
    "value": 2965,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current stencil fail function should the depth buffer test fail. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP."
  },
  "STENCIL_PASS_DEPTH_PASS": {
    "value": 2966,
    "comment": "Getting GL parameter information: Passed to getParameter to get the current stencil fail function should the depth buffer test pass. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP."
  },
  "STENCIL_REF": {
    "value": 2967,
    "comment": "Getting GL parameter information: Passed to getParameter to get the reference value used for stencil tests."
  },
  "STENCIL_VALUE_MASK": { "value": 2963, "comment": "Getting GL parameter information: passed to getParameter" },
  "STENCIL_WRITEMASK": { "value": 2968, "comment": "Getting GL parameter information: passed to getParameter" },
  "STENCIL_BACK_FUNC": { "value": 34816, "comment": "Getting GL parameter information: passed to getParameter" },
  "STENCIL_BACK_FAIL": { "value": 34817, "comment": "Getting GL parameter information: passed to getParameter" },
  "STENCIL_BACK_PASS_DEPTH_FAIL": {
    "value": 34818,
    "comment": "Getting GL parameter information: passed to getParameter"
  },
  "STENCIL_BACK_PASS_DEPTH_PASS": {
    "value": 34819,
    "comment": "Getting GL parameter information: passed to getParameter"
  },
  "STENCIL_BACK_REF": { "value": 36003, "comment": "Getting GL parameter information: passed to getParameter" },
  "STENCIL_BACK_VALUE_MASK": { "value": 36004, "comment": "Getting GL parameter information: passed to getParameter" },
  "STENCIL_BACK_WRITEMASK": { "value": 36005, "comment": "Getting GL parameter information: passed to getParameter" },
  "VIEWPORT": {
    "value": 2978,
    "comment": "Getting GL parameter information: passed to getParameter, returns an Int32Array with four elements for the current viewport dimensions."
  },
  "SCISSOR_BOX": {
    "value": 3088,
    "comment": "Getting GL parameter information: passed to getParameter, returns an Int32Array with four elements for the current scissor box dimensions."
  },
  "COLOR_CLEAR_VALUE": { "value": 3106, "comment": "Getting GL parameter information: passed to getParameter" },
  "COLOR_WRITEMASK": { "value": 3107, "comment": "Getting GL parameter information: passed to getParameter" },
  "UNPACK_ALIGNMENT": { "value": 3317, "comment": "Getting GL parameter information: passed to getParameter" },
  "PACK_ALIGNMENT": { "value": 3333, "comment": "Getting GL parameter information: passed to getParameter" },
  "MAX_TEXTURE_SIZE": { "value": 3379, "comment": "Getting GL parameter information: passed to getParameter" },
  "MAX_VIEWPORT_DIMS": { "value": 3386, "comment": "Getting GL parameter information: passed to getParameter" },
  "SUBPIXEL_BITS": { "value": 3408, "comment": "Getting GL parameter information: passed to getParameter" },
  "RED_BITS": { "value": 3410, "comment": "Getting GL parameter information: passed to getParameter" },
  "GREEN_BITS": { "value": 3411, "comment": "Getting GL parameter information: passed to getParameter" },
  "BLUE_BITS": { "value": 3412, "comment": "Getting GL parameter information: passed to getParameter" },
  "ALPHA_BITS": { "value": 3413, "comment": "Getting GL parameter information: passed to getParameter" },
  "DEPTH_BITS": { "value": 3414, "comment": "Getting GL parameter information: passed to getParameter" },
  "STENCIL_BITS": { "value": 3415, "comment": "Getting GL parameter information: passed to getParameter" },
  "POLYGON_OFFSET_UNITS": { "value": 10752, "comment": "Getting GL parameter information: passed to getParameter" },
  "POLYGON_OFFSET_FACTOR": { "value": 32824, "comment": "Getting GL parameter information: passed to getParameter" },
  "TEXTURE_BINDING_2D": { "value": 32873, "comment": "Getting GL parameter information: passed to getParameter" },
  "SAMPLE_BUFFERS": { "value": 32936, "comment": "Getting GL parameter information: passed to getParameter" },
  "SAMPLES": { "value": 32937, "comment": "Getting GL parameter information: passed to getParameter" },
  "SAMPLE_COVERAGE_VALUE": { "value": 32938, "comment": "Getting GL parameter information: passed to getParameter" },
  "SAMPLE_COVERAGE_INVERT": { "value": 32939, "comment": "Getting GL parameter information: passed to getParameter" },
  "COMPRESSED_TEXTURE_FORMATS": {
    "value": 34467,
    "comment": "Getting GL parameter information: passed to getParameter"
  },
  "VENDOR": { "value": 7936, "comment": "Getting GL parameter information: passed to getParameter" },
  "RENDERER": { "value": 7937, "comment": "Getting GL parameter information: passed to getParameter" },
  "VERSION": { "value": 7938, "comment": "Getting GL parameter information: passed to getParameter" },
  "IMPLEMENTATION_COLOR_READ_TYPE": {
    "value": 35738,
    "comment": "Getting GL parameter information: passed to getParameter"
  },
  "IMPLEMENTATION_COLOR_READ_FORMAT": {
    "value": 35739,
    "comment": "Getting GL parameter information: passed to getParameter"
  },
  "BROWSER_DEFAULT_WEBGL": { "value": 37444, "comment": "Getting GL parameter information: passed to getParameter" },
  "STATIC_DRAW": {
    "value": 35044,
    "comment": "Buffers: Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and not change often."
  },
  "STREAM_DRAW": {
    "value": 35040,
    "comment": "Buffers: Passed to bufferData as a hint about whether the contents of the buffer are likely to not be used often."
  },
  "DYNAMIC_DRAW": {
    "value": 35048,
    "comment": "Buffers: Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and change often."
  },
  "ARRAY_BUFFER": {
    "value": 34962,
    "comment": "Buffers: Passed to bindBuffer or bufferData to specify the type of buffer being used."
  },
  "ELEMENT_ARRAY_BUFFER": {
    "value": 34963,
    "comment": "Buffers: Passed to bindBuffer or bufferData to specify the type of buffer being used."
  },
  "BUFFER_SIZE": { "value": 34660, "comment": "Buffers: Passed to getBufferParameter to get a buffer's size." },
  "BUFFER_USAGE": {
    "value": 34661,
    "comment": "Buffers: Passed to getBufferParameter to get the hint for the buffer passed in when it was created."
  },
  "CURRENT_VERTEX_ATTRIB": {
    "value": 34342,
    "comment": "Vertex attributes: Passed to getVertexAttrib to read back the current vertex attribute."
  },
  "VERTEX_ATTRIB_ARRAY_ENABLED": { "value": 34338, "comment": "Vertex attributes: Passed to getVertexAttrib" },
  "VERTEX_ATTRIB_ARRAY_SIZE": { "value": 34339, "comment": "Vertex attributes: Passed to getVertexAttrib" },
  "VERTEX_ATTRIB_ARRAY_STRIDE": { "value": 34340, "comment": "Vertex attributes: Passed to getVertexAttrib" },
  "VERTEX_ATTRIB_ARRAY_TYPE": { "value": 34341, "comment": "Vertex attributes: Passed to getVertexAttrib" },
  "VERTEX_ATTRIB_ARRAY_NORMALIZED": { "value": 34922, "comment": "Vertex attributes: Passed to getVertexAttrib" },
  "VERTEX_ATTRIB_ARRAY_POINTER": { "value": 34373, "comment": "Vertex attributes: Passed to getVertexAttrib" },
  "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": { "value": 34975, "comment": "Vertex attributes: Passed to getVertexAttrib" },
  "CULL_FACE": {
    "value": 2884,
    "comment": "Culling: Passed to enable/disable to turn on/off culling. Can also be used with getParameter to find the current culling method."
  },
  "FRONT": {
    "value": 1028,
    "comment": "Culling: Passed to cullFace to specify that only front faces should be culled."
  },
  "BACK": { "value": 1029, "comment": "Culling: Passed to cullFace to specify that only back faces should be culled." },
  "FRONT_AND_BACK": {
    "value": 1032,
    "comment": "Culling: Passed to cullFace to specify that front and back faces should be culled."
  },
  "BLEND": {
    "value": 3042,
    "comment": "Enabling and disabling: Passed to enable/disable to turn on/off blending. Can also be used with getParameter to find the current blending method."
  },
  "DEPTH_TEST": {
    "value": 2929,
    "comment": "Enabling and disabling: Passed to enable/disable to turn on/off the depth test. Can also be used with getParameter to query the depth test."
  },
  "DITHER": {
    "value": 3024,
    "comment": "Enabling and disabling: Passed to enable/disable to turn on/off dithering. Can also be used with getParameter to find the current dithering method."
  },
  "POLYGON_OFFSET_FILL": {
    "value": 32823,
    "comment": "Enabling and disabling: Passed to enable/disable to turn on/off the polygon offset. Useful for rendering hidden-line images, decals, and or solids with highlighted edges. Can also be used with getParameter to query the scissor test."
  },
  "SAMPLE_ALPHA_TO_COVERAGE": {
    "value": 32926,
    "comment": "Enabling and disabling: Passed to enable/disable to turn on/off the alpha to coverage. Used in multi-sampling alpha channels."
  },
  "SAMPLE_COVERAGE": {
    "value": 32928,
    "comment": "Enabling and disabling: Passed to enable/disable to turn on/off the sample coverage. Used in multi-sampling."
  },
  "SCISSOR_TEST": {
    "value": 3089,
    "comment": "Enabling and disabling: Passed to enable/disable to turn on/off the scissor test. Can also be used with getParameter to query the scissor test."
  },
  "STENCIL_TEST": {
    "value": 2960,
    "comment": "Enabling and disabling: Passed to enable/disable to turn on/off the stencil test. Can also be used with getParameter to query the stencil test."
  },
  "NO_ERROR": { "value": 0, "comment": "Errors: Returned from getError." },
  "INVALID_ENUM": { "value": 1280, "comment": "Errors: Returned from getError." },
  "INVALID_VALUE": { "value": 1281, "comment": "Errors: Returned from getError." },
  "INVALID_OPERATION": { "value": 1282, "comment": "Errors: Returned from getError." },
  "OUT_OF_MEMORY": { "value": 1285, "comment": "Errors: Returned from getError." },
  "CONTEXT_LOST_WEBGL": { "value": 37442, "comment": "Errors: Returned from getError." },
  "CW": {
    "value": 2304,
    "comment": "Front face directions: Passed to frontFace to specify the front face of a polygon is drawn in the clockwise direction"
  },
  "CCW": {
    "value": 2305,
    "comment": "Front face directions: Passed to frontFace to specify the front face of a polygon is drawn in the counter clockwise direction"
  },
  "DONT_CARE": { "value": 4352, "comment": "Hints: There is no preference for this behavior." },
  "FASTEST": { "value": 4353, "comment": "Hints: The most efficient behavior should be used." },
  "NICEST": { "value": 4354, "comment": "Hints: The most correct or the highest quality option should be used." },
  "GENERATE_MIPMAP_HINT": {
    "value": 33170,
    "comment": "Hints: Hint for the quality of filtering when generating mipmap images with WebGLRenderingContext.generateMipmap()."
  },
  "BYTE": { "value": 5120, "comment": "Data types:" },
  "UNSIGNED_BYTE": { "value": 5121, "comment": "Data types and Pixel types:" },
  "SHORT": { "value": 5122, "comment": "Data types:" },
  "UNSIGNED_SHORT": { "value": 5123, "comment": "Data types:" },
  "INT": { "value": 5124, "comment": "Data types:" },
  "UNSIGNED_INT": { "value": 5125, "comment": "Data types:" },
  "FLOAT": { "value": 5126, "comment": "Data types:" },
  "DEPTH_COMPONENT": { "value": 6402, "comment": "Pixel formats:" },
  "ALPHA": { "value": 6406, "comment": "Pixel formats:" },
  "RGB": { "value": 6407, "comment": "Pixel formats:" },
  "RGBA": { "value": 6408, "comment": "Pixel formats:" },
  "LUMINANCE": { "value": 6409, "comment": "Pixel formats:" },
  "LUMINANCE_ALPHA": { "value": 6410, "comment": "Pixel formats:" },
  "UNSIGNED_SHORT_4_4_4_4": { "value": 32819, "comment": "Pixel types:" },
  "UNSIGNED_SHORT_5_5_5_1": { "value": 32820, "comment": "Pixel types:" },
  "UNSIGNED_SHORT_5_6_5": { "value": 33635, "comment": "Pixel types:" },
  "FRAGMENT_SHADER": { "value": 35632, "comment": "Shaders: Passed to createShader to define a fragment shader." },
  "VERTEX_SHADER": { "value": 35633, "comment": "Shaders: Passed to createShader to define a vertex shader" },
  "COMPILE_STATUS": {
    "value": 35713,
    "comment": "Shaders: Passed to getShaderParamter to get the status of the compilation. Returns false if the shader was not compiled. You can then query getShaderInfoLog to find the exact error"
  },
  "DELETE_STATUS": {
    "value": 35712,
    "comment": "Shaders: Passed to getShaderParamter to determine if a shader was deleted via deleteShader. Returns true if it was, false otherwise."
  },
  "LINK_STATUS": {
    "value": 35714,
    "comment": "Shaders: Passed to getProgramParameter after calling linkProgram to determine if a program was linked correctly. Returns false if there were errors. Use getProgramInfoLog to find the exact error."
  },
  "VALIDATE_STATUS": {
    "value": 35715,
    "comment": "Shaders: Passed to getProgramParameter after calling validateProgram to determine if it is valid. Returns false if errors were found."
  },
  "ATTACHED_SHADERS": {
    "value": 35717,
    "comment": "Shaders: Passed to getProgramParameter after calling attachShader to determine if the shader was attached correctly. Returns false if errors occurred."
  },
  "ACTIVE_ATTRIBUTES": {
    "value": 35721,
    "comment": "Shaders: Passed to getProgramParameter to get the number of attributes active in a program."
  },
  "ACTIVE_UNIFORMS": {
    "value": 35718,
    "comment": "Shaders: Passed to getProgramParamter to get the number of uniforms active in a program."
  },
  "MAX_VERTEX_ATTRIBS": {
    "value": 34921,
    "comment": "Shaders: The maximum number of entries possible in the vertex attribute list."
  },
  "MAX_VERTEX_UNIFORM_VECTORS": { "value": 36347, "comment": "Shaders:" },
  "MAX_VARYING_VECTORS": { "value": 36348, "comment": "Shaders:" },
  "MAX_COMBINED_TEXTURE_IMAGE_UNITS": { "value": 35661, "comment": "Shaders:" },
  "MAX_VERTEX_TEXTURE_IMAGE_UNITS": { "value": 35660, "comment": "Shaders:" },
  "MAX_TEXTURE_IMAGE_UNITS": {
    "value": 34930,
    "comment": "Shaders: Implementation dependent number of maximum texture units. At least 8."
  },
  "MAX_FRAGMENT_UNIFORM_VECTORS": { "value": 36349, "comment": "Shaders:" },
  "SHADER_TYPE": { "value": 35663, "comment": "Shaders:" },
  "SHADING_LANGUAGE_VERSION": { "value": 35724, "comment": "Shaders:" },
  "CURRENT_PROGRAM": { "value": 35725, "comment": "Shaders:" },
  "NEVER": {
    "value": 512,
    "comment": "Depth or stencil tests: Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass. i.e. Nothing will be drawn."
  },
  "LESS": {
    "value": 513,
    "comment": "Depth or stencil tests: Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value."
  },
  "EQUAL": {
    "value": 514,
    "comment": "Depth or stencil tests: Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value."
  },
  "LEQUAL": {
    "value": 515,
    "comment": "Depth or stencil tests: Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value."
  },
  "GREATER": {
    "value": 516,
    "comment": "Depth or stencil tests: Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value."
  },
  "NOTEQUAL": {
    "value": 517,
    "comment": "Depth or stencil tests: Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value."
  },
  "GEQUAL": {
    "value": 518,
    "comment": "Depth or stencil tests: Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value."
  },
  "ALWAYS": {
    "value": 519,
    "comment": "Depth or stencil tests: Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn."
  },
  "KEEP": { "value": 7680, "comment": "Stencil actions:" },
  "REPLACE": { "value": 7681, "comment": "Stencil actions:" },
  "INCR": { "value": 7682, "comment": "Stencil actions:" },
  "DECR": { "value": 7683, "comment": "Stencil actions:" },
  "INVERT": { "value": 5386, "comment": "Stencil actions:" },
  "INCR_WRAP": { "value": 34055, "comment": "Stencil actions:" },
  "DECR_WRAP": { "value": 34056, "comment": "Stencil actions:" },
  "NEAREST": { "value": 9728, "comment": "Textures:" },
  "LINEAR": { "value": 9729, "comment": "Textures:" },
  "NEAREST_MIPMAP_NEAREST": { "value": 9984, "comment": "Textures:" },
  "LINEAR_MIPMAP_NEAREST": { "value": 9985, "comment": "Textures:" },
  "NEAREST_MIPMAP_LINEAR": { "value": 9986, "comment": "Textures:" },
  "LINEAR_MIPMAP_LINEAR": { "value": 9987, "comment": "Textures:" },
  "TEXTURE_MAG_FILTER": { "value": 10240, "comment": "Textures:" },
  "TEXTURE_MIN_FILTER": { "value": 10241, "comment": "Textures:" },
  "TEXTURE_WRAP_S": { "value": 10242, "comment": "Textures:" },
  "TEXTURE_WRAP_T": { "value": 10243, "comment": "Textures:" },
  "TEXTURE_2D": { "value": 3553, "comment": "Textures:" },
  "TEXTURE": { "value": 5890, "comment": "Textures:" },
  "TEXTURE_CUBE_MAP": { "value": 34067, "comment": "Textures:" },
  "TEXTURE_BINDING_CUBE_MAP": { "value": 34068, "comment": "Textures:" },
  "TEXTURE_CUBE_MAP_POSITIVE_X": { "value": 34069, "comment": "Textures:" },
  "TEXTURE_CUBE_MAP_NEGATIVE_X": { "value": 34070, "comment": "Textures:" },
  "TEXTURE_CUBE_MAP_POSITIVE_Y": { "value": 34071, "comment": "Textures:" },
  "TEXTURE_CUBE_MAP_NEGATIVE_Y": { "value": 34072, "comment": "Textures:" },
  "TEXTURE_CUBE_MAP_POSITIVE_Z": { "value": 34073, "comment": "Textures:" },
  "TEXTURE_CUBE_MAP_NEGATIVE_Z": { "value": 34074, "comment": "Textures:" },
  "MAX_CUBE_MAP_TEXTURE_SIZE": { "value": 34076, "comment": "Textures:" },
  "TEXTURE0": { "value": 33984, "comment": "Textures: A texture unit." },
  "TEXTURE1": { "value": 33985, "comment": "Textures: A texture unit." },
  "TEXTURE2": { "value": 33986, "comment": "Textures: A texture unit." },
  "TEXTURE3": { "value": 33987, "comment": "Textures: A texture unit." },
  "TEXTURE4": { "value": 33988, "comment": "Textures: A texture unit." },
  "TEXTURE5": { "value": 33989, "comment": "Textures: A texture unit." },
  "TEXTURE6": { "value": 33990, "comment": "Textures: A texture unit." },
  "TEXTURE7": { "value": 33991, "comment": "Textures: A texture unit." },
  "TEXTURE8": { "value": 33992, "comment": "Textures: A texture unit." },
  "TEXTURE9": { "value": 33993, "comment": "Textures: A texture unit." },
  "TEXTURE10": { "value": 33994, "comment": "Textures: A texture unit." },
  "TEXTURE11": { "value": 33995, "comment": "Textures: A texture unit." },
  "TEXTURE12": { "value": 33996, "comment": "Textures: A texture unit." },
  "TEXTURE13": { "value": 33997, "comment": "Textures: A texture unit." },
  "TEXTURE14": { "value": 33998, "comment": "Textures: A texture unit." },
  "TEXTURE15": { "value": 33999, "comment": "Textures: A texture unit." },
  "TEXTURE16": { "value": 34000, "comment": "Textures: A texture unit." },
  "TEXTURE17": { "value": 34001, "comment": "Textures: A texture unit." },
  "TEXTURE18": { "value": 34002, "comment": "Textures: A texture unit." },
  "TEXTURE19": { "value": 34003, "comment": "Textures: A texture unit." },
  "TEXTURE20": { "value": 34004, "comment": "Textures: A texture unit." },
  "TEXTURE21": { "value": 34005, "comment": "Textures: A texture unit." },
  "TEXTURE22": { "value": 34006, "comment": "Textures: A texture unit." },
  "TEXTURE23": { "value": 34007, "comment": "Textures: A texture unit." },
  "TEXTURE24": { "value": 34008, "comment": "Textures: A texture unit." },
  "TEXTURE25": { "value": 34009, "comment": "Textures: A texture unit." },
  "TEXTURE26": { "value": 34010, "comment": "Textures: A texture unit." },
  "TEXTURE27": { "value": 34011, "comment": "Textures: A texture unit." },
  "TEXTURE28": { "value": 34012, "comment": "Textures: A texture unit." },
  "TEXTURE29": { "value": 34013, "comment": "Textures: A texture unit." },
  "TEXTURE30": { "value": 34014, "comment": "Textures: A texture unit." },
  "TEXTURE31": { "value": 34015, "comment": "Textures: A texture unit." },
  "ACTIVE_TEXTURE": { "value": 34016, "comment": "Textures: The current active texture unit." },
  "REPEAT": { "value": 10497, "comment": "Textures:" },
  "CLAMP_TO_EDGE": { "value": 33071, "comment": "Textures:" },
  "MIRRORED_REPEAT": { "value": 33648, "comment": "Textures:" },
  "FLOAT_VEC2": { "value": 35664, "comment": "Uniform types:" },
  "FLOAT_VEC3": { "value": 35665, "comment": "Uniform types:" },
  "FLOAT_VEC4": { "value": 35666, "comment": "Uniform types:" },
  "INT_VEC2": { "value": 35667, "comment": "Uniform types:" },
  "INT_VEC3": { "value": 35668, "comment": "Uniform types:" },
  "INT_VEC4": { "value": 35669, "comment": "Uniform types:" },
  "BOOL": { "value": 35670, "comment": "Uniform types:" },
  "BOOL_VEC2": { "value": 35671, "comment": "Uniform types:" },
  "BOOL_VEC3": { "value": 35672, "comment": "Uniform types:" },
  "BOOL_VEC4": { "value": 35673, "comment": "Uniform types:" },
  "FLOAT_MAT2": { "value": 35674, "comment": "Uniform types:" },
  "FLOAT_MAT3": { "value": 35675, "comment": "Uniform types:" },
  "FLOAT_MAT4": { "value": 35676, "comment": "Uniform types:" },
  "SAMPLER_2D": { "value": 35678, "comment": "Uniform types:" },
  "SAMPLER_CUBE": { "value": 35680, "comment": "Uniform types:" },
  "LOW_FLOAT": { "value": 36336, "comment": "Shader precision-specified types:" },
  "MEDIUM_FLOAT": { "value": 36337, "comment": "Shader precision-specified types:" },
  "HIGH_FLOAT": { "value": 36338, "comment": "Shader precision-specified types:" },
  "LOW_INT": { "value": 36339, "comment": "Shader precision-specified types:" },
  "MEDIUM_INT": { "value": 36340, "comment": "Shader precision-specified types:" },
  "HIGH_INT": { "value": 36341, "comment": "Shader precision-specified types:" },
  "FRAMEBUFFER": { "value": 36160, "comment": "Framebuffers and renderbuffers:" },
  "RENDERBUFFER": { "value": 36161, "comment": "Framebuffers and renderbuffers:" },
  "RGBA4": { "value": 32854, "comment": "Framebuffers and renderbuffers:" },
  "RGB5_A1": { "value": 32855, "comment": "Framebuffers and renderbuffers:" },
  "RGB565": { "value": 36194, "comment": "Framebuffers and renderbuffers:" },
  "DEPTH_COMPONENT16": { "value": 33189, "comment": "Framebuffers and renderbuffers:" },
  "STENCIL_INDEX8": { "value": 36168, "comment": "Framebuffers and renderbuffers:" },
  "RENDERBUFFER_WIDTH": { "value": 36162, "comment": "Framebuffers and renderbuffers:" },
  "RENDERBUFFER_HEIGHT": { "value": 36163, "comment": "Framebuffers and renderbuffers:" },
  "RENDERBUFFER_INTERNAL_FORMAT": { "value": 36164, "comment": "Framebuffers and renderbuffers:" },
  "RENDERBUFFER_RED_SIZE": { "value": 36176, "comment": "Framebuffers and renderbuffers:" },
  "RENDERBUFFER_GREEN_SIZE": { "value": 36177, "comment": "Framebuffers and renderbuffers:" },
  "RENDERBUFFER_BLUE_SIZE": { "value": 36178, "comment": "Framebuffers and renderbuffers:" },
  "RENDERBUFFER_ALPHA_SIZE": { "value": 36179, "comment": "Framebuffers and renderbuffers:" },
  "RENDERBUFFER_DEPTH_SIZE": { "value": 36180, "comment": "Framebuffers and renderbuffers:" },
  "RENDERBUFFER_STENCIL_SIZE": { "value": 36181, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": { "value": 36048, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": { "value": 36049, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": { "value": 36050, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": { "value": 36051, "comment": "Framebuffers and renderbuffers:" },
  "COLOR_ATTACHMENT0": { "value": 36064, "comment": "Framebuffers and renderbuffers:" },
  "DEPTH_ATTACHMENT": { "value": 36096, "comment": "Framebuffers and renderbuffers:" },
  "STENCIL_ATTACHMENT": { "value": 36128, "comment": "Framebuffers and renderbuffers:" },
  "NONE": { "value": 0, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_COMPLETE": { "value": 36053, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": { "value": 36054, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": { "value": 36055, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": { "value": 36057, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_UNSUPPORTED": { "value": 36061, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_BINDING": { "value": 36006, "comment": "Framebuffers and renderbuffers:" },
  "RENDERBUFFER_BINDING": { "value": 36007, "comment": "Framebuffers and renderbuffers:" },
  "MAX_RENDERBUFFER_SIZE": { "value": 34024, "comment": "Framebuffers and renderbuffers:" },
  "INVALID_FRAMEBUFFER_OPERATION": { "value": 1286, "comment": "Framebuffers and renderbuffers:" },
  "UNPACK_FLIP_Y_WEBGL": { "value": 37440, "comment": "Pixel storage modes:" },
  "UNPACK_PREMULTIPLY_ALPHA_WEBGL": { "value": 37441, "comment": "Pixel storage modes:" },
  "UNPACK_COLORSPACE_CONVERSION_WEBGL": { "value": 37443, "comment": "Pixel storage modes:" },
  "READ_BUFFER": { "value": 3074, "comment": "Getting GL parameter information: passed to getParameter" },
  "UNPACK_ROW_LENGTH": { "value": 3314, "comment": "Getting GL parameter information: passed to getParameter" },
  "UNPACK_SKIP_ROWS": { "value": 3315, "comment": "Getting GL parameter information: passed to getParameter" },
  "UNPACK_SKIP_PIXELS": { "value": 3316, "comment": "Getting GL parameter information: passed to getParameter" },
  "PACK_ROW_LENGTH": { "value": 3330, "comment": "Getting GL parameter information: passed to getParameter" },
  "PACK_SKIP_ROWS": { "value": 3331, "comment": "Getting GL parameter information: passed to getParameter" },
  "PACK_SKIP_PIXELS": { "value": 3332, "comment": "Getting GL parameter information: passed to getParameter" },
  "TEXTURE_BINDING_3D": { "value": 32874, "comment": "Getting GL parameter information: passed to getParameter" },
  "UNPACK_SKIP_IMAGES": { "value": 32877, "comment": "Getting GL parameter information: passed to getParameter" },
  "UNPACK_IMAGE_HEIGHT": { "value": 32878, "comment": "Getting GL parameter information: passed to getParameter" },
  "MAX_3D_TEXTURE_SIZE": { "value": 32883, "comment": "Getting GL parameter information: passed to getParameter" },
  "MAX_ELEMENTS_VERTICES": { "value": 33000, "comment": "Getting GL parameter information: passed to getParameter" },
  "MAX_ELEMENTS_INDICES": { "value": 33001, "comment": "Getting GL parameter information: passed to getParameter" },
  "MAX_TEXTURE_LOD_BIAS": { "value": 34045, "comment": "Getting GL parameter information: passed to getParameter" },
  "MAX_FRAGMENT_UNIFORM_COMPONENTS": {
    "value": 35657,
    "comment": "Getting GL parameter information: passed to getParameter"
  },
  "MAX_VERTEX_UNIFORM_COMPONENTS": {
    "value": 35658,
    "comment": "Getting GL parameter information: passed to getParameter"
  },
  "MAX_ARRAY_TEXTURE_LAYERS": { "value": 35071, "comment": "Getting GL parameter information: passed to getParameter" },
  "MIN_PROGRAM_TEXEL_OFFSET": { "value": 35076, "comment": "Getting GL parameter information: passed to getParameter" },
  "MAX_PROGRAM_TEXEL_OFFSET": { "value": 35077, "comment": "Getting GL parameter information: passed to getParameter" },
  "MAX_VARYING_COMPONENTS": { "value": 35659, "comment": "Getting GL parameter information: passed to getParameter" },
  "FRAGMENT_SHADER_DERIVATIVE_HINT": {
    "value": 35723,
    "comment": "Getting GL parameter information: passed to getParameter"
  },
  "RASTERIZER_DISCARD": { "value": 35977, "comment": "Getting GL parameter information: passed to getParameter" },
  "VERTEX_ARRAY_BINDING": { "value": 34229, "comment": "Getting GL parameter information: passed to getParameter" },
  "MAX_VERTEX_OUTPUT_COMPONENTS": {
    "value": 37154,
    "comment": "Getting GL parameter information: passed to getParameter"
  },
  "MAX_FRAGMENT_INPUT_COMPONENTS": {
    "value": 37157,
    "comment": "Getting GL parameter information: passed to getParameter"
  },
  "MAX_SERVER_WAIT_TIMEOUT": { "value": 37137, "comment": "Getting GL parameter information: passed to getParameter" },
  "MAX_ELEMENT_INDEX": { "value": 36203, "comment": "Getting GL parameter information: passed to getParameter" },
  "RED": { "value": 6403, "comment": "Textures:" },
  "RGB8": { "value": 32849, "comment": "Textures:" },
  "RGBA8": { "value": 32856, "comment": "Textures:" },
  "RGB10_A2": { "value": 32857, "comment": "Textures:" },
  "TEXTURE_3D": { "value": 32879, "comment": "Textures:" },
  "TEXTURE_WRAP_R": { "value": 32882, "comment": "Textures:" },
  "TEXTURE_MIN_LOD": { "value": 33082, "comment": "Textures:" },
  "TEXTURE_MAX_LOD": { "value": 33083, "comment": "Textures:" },
  "TEXTURE_BASE_LEVEL": { "value": 33084, "comment": "Textures:" },
  "TEXTURE_MAX_LEVEL": { "value": 33085, "comment": "Textures:" },
  "TEXTURE_COMPARE_MODE": { "value": 34892, "comment": "Textures:" },
  "TEXTURE_COMPARE_FUNC": { "value": 34893, "comment": "Textures:" },
  "SRGB": { "value": 35904, "comment": "Textures:" },
  "SRGB8": { "value": 35905, "comment": "Textures:" },
  "SRGB8_ALPHA8": { "value": 35907, "comment": "Textures:" },
  "COMPARE_REF_TO_TEXTURE": { "value": 34894, "comment": "Textures:" },
  "RGBA32F": { "value": 34836, "comment": "Textures:" },
  "RGB32F": { "value": 34837, "comment": "Textures:" },
  "RGBA16F": { "value": 34842, "comment": "Textures:" },
  "RGB16F": { "value": 34843, "comment": "Textures:" },
  "TEXTURE_2D_ARRAY": { "value": 35866, "comment": "Textures:" },
  "TEXTURE_BINDING_2D_ARRAY": { "value": 35869, "comment": "Textures:" },
  "R11F_G11F_B10F": { "value": 35898, "comment": "Textures:" },
  "RGB9_E5": { "value": 35901, "comment": "Textures:" },
  "RGBA32UI": { "value": 36208, "comment": "Textures:" },
  "RGB32UI": { "value": 36209, "comment": "Textures:" },
  "RGBA16UI": { "value": 36214, "comment": "Textures:" },
  "RGB16UI": { "value": 36215, "comment": "Textures:" },
  "RGBA8UI": { "value": 36220, "comment": "Textures:" },
  "RGB8UI": { "value": 36221, "comment": "Textures:" },
  "RGBA32I": { "value": 36226, "comment": "Textures:" },
  "RGB32I": { "value": 36227, "comment": "Textures:" },
  "RGBA16I": { "value": 36232, "comment": "Textures:" },
  "RGB16I": { "value": 36233, "comment": "Textures:" },
  "RGBA8I": { "value": 36238, "comment": "Textures:" },
  "RGB8I": { "value": 36239, "comment": "Textures:" },
  "RED_INTEGER": { "value": 36244, "comment": "Textures:" },
  "RGB_INTEGER": { "value": 36248, "comment": "Textures:" },
  "RGBA_INTEGER": { "value": 36249, "comment": "Textures:" },
  "R8": { "value": 33321, "comment": "Textures:" },
  "RG8": { "value": 33323, "comment": "Textures:" },
  "R16F": { "value": 33325, "comment": "Textures:" },
  "R32F": { "value": 33326, "comment": "Textures:" },
  "RG16F": { "value": 33327, "comment": "Textures:" },
  "RG32F": { "value": 33328, "comment": "Textures:" },
  "R8I": { "value": 33329, "comment": "Textures:" },
  "R8UI": { "value": 33330, "comment": "Textures:" },
  "R16I": { "value": 33331, "comment": "Textures:" },
  "R16UI": { "value": 33332, "comment": "Textures:" },
  "R32I": { "value": 33333, "comment": "Textures:" },
  "R32UI": { "value": 33334, "comment": "Textures:" },
  "RG8I": { "value": 33335, "comment": "Textures:" },
  "RG8UI": { "value": 33336, "comment": "Textures:" },
  "RG16I": { "value": 33337, "comment": "Textures:" },
  "RG16UI": { "value": 33338, "comment": "Textures:" },
  "RG32I": { "value": 33339, "comment": "Textures:" },
  "RG32UI": { "value": 33340, "comment": "Textures:" },
  "R8_SNORM": { "value": 36756, "comment": "Textures:" },
  "RG8_SNORM": { "value": 36757, "comment": "Textures:" },
  "RGB8_SNORM": { "value": 36758, "comment": "Textures:" },
  "RGBA8_SNORM": { "value": 36759, "comment": "Textures:" },
  "RGB10_A2UI": { "value": 36975, "comment": "Textures:" },
  "TEXTURE_IMMUTABLE_FORMAT": { "value": 37167, "comment": "Textures:" },
  "TEXTURE_IMMUTABLE_LEVELS": { "value": 33503, "comment": "Textures:" },
  "UNSIGNED_INT_2_10_10_10_REV": { "value": 33640, "comment": "Pixel types:" },
  "UNSIGNED_INT_10F_11F_11F_REV": { "value": 35899, "comment": "Pixel types:" },
  "UNSIGNED_INT_5_9_9_9_REV": { "value": 35902, "comment": "Pixel types:" },
  "FLOAT_32_UNSIGNED_INT_24_8_REV": { "value": 36269, "comment": "Pixel types:" },
  "UNSIGNED_INT_24_8": { "value": 34042, "comment": "Pixel types:" },
  "HALF_FLOAT": { "value": 5131, "comment": "Pixel types:" },
  "RG": { "value": 33319, "comment": "Pixel types:" },
  "RG_INTEGER": { "value": 33320, "comment": "Pixel types:" },
  "INT_2_10_10_10_REV": { "value": 36255, "comment": "Pixel types:" },
  "CURRENT_QUERY": { "value": 34917, "comment": "Queries:" },
  "QUERY_RESULT": { "value": 34918, "comment": "Queries:" },
  "QUERY_RESULT_AVAILABLE": { "value": 34919, "comment": "Queries:" },
  "ANY_SAMPLES_PASSED": { "value": 35887, "comment": "Queries:" },
  "ANY_SAMPLES_PASSED_CONSERVATIVE": { "value": 36202, "comment": "Queries:" },
  "MAX_DRAW_BUFFERS": { "value": 34852, "comment": "Draw buffers:" },
  "DRAW_BUFFER0": { "value": 34853, "comment": "Draw buffers:" },
  "DRAW_BUFFER1": { "value": 34854, "comment": "Draw buffers:" },
  "DRAW_BUFFER2": { "value": 34855, "comment": "Draw buffers:" },
  "DRAW_BUFFER3": { "value": 34856, "comment": "Draw buffers:" },
  "DRAW_BUFFER4": { "value": 34857, "comment": "Draw buffers:" },
  "DRAW_BUFFER5": { "value": 34858, "comment": "Draw buffers:" },
  "DRAW_BUFFER6": { "value": 34859, "comment": "Draw buffers:" },
  "DRAW_BUFFER7": { "value": 34860, "comment": "Draw buffers:" },
  "DRAW_BUFFER8": { "value": 34861, "comment": "Draw buffers:" },
  "DRAW_BUFFER9": { "value": 34862, "comment": "Draw buffers:" },
  "DRAW_BUFFER10": { "value": 34863, "comment": "Draw buffers:" },
  "DRAW_BUFFER11": { "value": 34864, "comment": "Draw buffers:" },
  "DRAW_BUFFER12": { "value": 34865, "comment": "Draw buffers:" },
  "DRAW_BUFFER13": { "value": 34866, "comment": "Draw buffers:" },
  "DRAW_BUFFER14": { "value": 34867, "comment": "Draw buffers:" },
  "DRAW_BUFFER15": { "value": 34868, "comment": "Draw buffers:" },
  "MAX_COLOR_ATTACHMENTS": { "value": 36063, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT1": { "value": 36065, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT2": { "value": 36066, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT3": { "value": 36067, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT4": { "value": 36068, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT5": { "value": 36069, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT6": { "value": 36070, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT7": { "value": 36071, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT8": { "value": 36072, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT9": { "value": 36073, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT10": { "value": 36074, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT11": { "value": 36075, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT12": { "value": 36076, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT13": { "value": 36077, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT14": { "value": 36078, "comment": "Draw buffers:" },
  "COLOR_ATTACHMENT15": { "value": 36079, "comment": "Draw buffers:" },
  "SAMPLER_3D": { "value": 35679, "comment": "Samplers:" },
  "SAMPLER_2D_SHADOW": { "value": 35682, "comment": "Samplers:" },
  "SAMPLER_2D_ARRAY": { "value": 36289, "comment": "Samplers:" },
  "SAMPLER_2D_ARRAY_SHADOW": { "value": 36292, "comment": "Samplers:" },
  "SAMPLER_CUBE_SHADOW": { "value": 36293, "comment": "Samplers:" },
  "INT_SAMPLER_2D": { "value": 36298, "comment": "Samplers:" },
  "INT_SAMPLER_3D": { "value": 36299, "comment": "Samplers:" },
  "INT_SAMPLER_CUBE": { "value": 36300, "comment": "Samplers:" },
  "INT_SAMPLER_2D_ARRAY": { "value": 36303, "comment": "Samplers:" },
  "UNSIGNED_INT_SAMPLER_2D": { "value": 36306, "comment": "Samplers:" },
  "UNSIGNED_INT_SAMPLER_3D": { "value": 36307, "comment": "Samplers:" },
  "UNSIGNED_INT_SAMPLER_CUBE": { "value": 36308, "comment": "Samplers:" },
  "UNSIGNED_INT_SAMPLER_2D_ARRAY": { "value": 36311, "comment": "Samplers:" },
  "MAX_SAMPLES": { "value": 36183, "comment": "Samplers:" },
  "SAMPLER_BINDING": { "value": 35097, "comment": "Samplers:" },
  "PIXEL_PACK_BUFFER": { "value": 35051, "comment": "Buffers:" },
  "PIXEL_UNPACK_BUFFER": { "value": 35052, "comment": "Buffers:" },
  "PIXEL_PACK_BUFFER_BINDING": { "value": 35053, "comment": "Buffers:" },
  "PIXEL_UNPACK_BUFFER_BINDING": { "value": 35055, "comment": "Buffers:" },
  "COPY_READ_BUFFER": { "value": 36662, "comment": "Buffers:" },
  "COPY_WRITE_BUFFER": { "value": 36663, "comment": "Buffers:" },
  "COPY_READ_BUFFER_BINDING": { "value": 36662, "comment": "Buffers:" },
  "COPY_WRITE_BUFFER_BINDING": { "value": 36663, "comment": "Buffers:" },
  "FLOAT_MAT2x3": { "value": 35685, "comment": "Data types:" },
  "FLOAT_MAT2x4": { "value": 35686, "comment": "Data types:" },
  "FLOAT_MAT3x2": { "value": 35687, "comment": "Data types:" },
  "FLOAT_MAT3x4": { "value": 35688, "comment": "Data types:" },
  "FLOAT_MAT4x2": { "value": 35689, "comment": "Data types:" },
  "FLOAT_MAT4x3": { "value": 35690, "comment": "Data types:" },
  "UNSIGNED_INT_VEC2": { "value": 36294, "comment": "Data types:" },
  "UNSIGNED_INT_VEC3": { "value": 36295, "comment": "Data types:" },
  "UNSIGNED_INT_VEC4": { "value": 36296, "comment": "Data types:" },
  "UNSIGNED_NORMALIZED": { "value": 35863, "comment": "Data types:" },
  "SIGNED_NORMALIZED": { "value": 36764, "comment": "Data types:" },
  "VERTEX_ATTRIB_ARRAY_INTEGER": { "value": 35069, "comment": "Vertex attributes:" },
  "VERTEX_ATTRIB_ARRAY_DIVISOR": { "value": 35070, "comment": "Vertex attributes:" },
  "TRANSFORM_FEEDBACK_BUFFER_MODE": { "value": 35967, "comment": "Transform feedback:" },
  "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS": { "value": 35968, "comment": "Transform feedback:" },
  "TRANSFORM_FEEDBACK_VARYINGS": { "value": 35971, "comment": "Transform feedback:" },
  "TRANSFORM_FEEDBACK_BUFFER_START": { "value": 35972, "comment": "Transform feedback:" },
  "TRANSFORM_FEEDBACK_BUFFER_SIZE": { "value": 35973, "comment": "Transform feedback:" },
  "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN": { "value": 35976, "comment": "Transform feedback:" },
  "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS": { "value": 35978, "comment": "Transform feedback:" },
  "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS": { "value": 35979, "comment": "Transform feedback:" },
  "INTERLEAVED_ATTRIBS": { "value": 35980, "comment": "Transform feedback:" },
  "SEPARATE_ATTRIBS": { "value": 35981, "comment": "Transform feedback:" },
  "TRANSFORM_FEEDBACK_BUFFER": { "value": 35982, "comment": "Transform feedback:" },
  "TRANSFORM_FEEDBACK_BUFFER_BINDING": { "value": 35983, "comment": "Transform feedback:" },
  "TRANSFORM_FEEDBACK": { "value": 36386, "comment": "Transform feedback:" },
  "TRANSFORM_FEEDBACK_PAUSED": { "value": 36387, "comment": "Transform feedback:" },
  "TRANSFORM_FEEDBACK_ACTIVE": { "value": 36388, "comment": "Transform feedback:" },
  "TRANSFORM_FEEDBACK_BINDING": { "value": 36389, "comment": "Transform feedback:" },
  "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING": { "value": 33296, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE": { "value": 33297, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_ATTACHMENT_RED_SIZE": { "value": 33298, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE": { "value": 33299, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE": { "value": 33300, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE": { "value": 33301, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE": { "value": 33302, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE": { "value": 33303, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_DEFAULT": { "value": 33304, "comment": "Framebuffers and renderbuffers:" },
  "DEPTH_STENCIL_ATTACHMENT": { "value": 33306, "comment": "Framebuffers and renderbuffers:" },
  "DEPTH_STENCIL": { "value": 34041, "comment": "Framebuffers and renderbuffers:" },
  "DEPTH24_STENCIL8": { "value": 35056, "comment": "Framebuffers and renderbuffers:" },
  "DRAW_FRAMEBUFFER_BINDING": { "value": 36006, "comment": "Framebuffers and renderbuffers:" },
  "READ_FRAMEBUFFER": { "value": 36008, "comment": "Framebuffers and renderbuffers:" },
  "DRAW_FRAMEBUFFER": { "value": 36009, "comment": "Framebuffers and renderbuffers:" },
  "READ_FRAMEBUFFER_BINDING": { "value": 36010, "comment": "Framebuffers and renderbuffers:" },
  "RENDERBUFFER_SAMPLES": { "value": 36011, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER": { "value": 36052, "comment": "Framebuffers and renderbuffers:" },
  "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE": { "value": 36182, "comment": "Framebuffers and renderbuffers:" },
  "UNIFORM_BUFFER": { "value": 35345, "comment": "Uniforms:" },
  "UNIFORM_BUFFER_BINDING": { "value": 35368, "comment": "Uniforms:" },
  "UNIFORM_BUFFER_START": { "value": 35369, "comment": "Uniforms:" },
  "UNIFORM_BUFFER_SIZE": { "value": 35370, "comment": "Uniforms:" },
  "MAX_VERTEX_UNIFORM_BLOCKS": { "value": 35371, "comment": "Uniforms:" },
  "MAX_FRAGMENT_UNIFORM_BLOCKS": { "value": 35373, "comment": "Uniforms:" },
  "MAX_COMBINED_UNIFORM_BLOCKS": { "value": 35374, "comment": "Uniforms:" },
  "MAX_UNIFORM_BUFFER_BINDINGS": { "value": 35375, "comment": "Uniforms:" },
  "MAX_UNIFORM_BLOCK_SIZE": { "value": 35376, "comment": "Uniforms:" },
  "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS": { "value": 35377, "comment": "Uniforms:" },
  "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS": { "value": 35379, "comment": "Uniforms:" },
  "UNIFORM_BUFFER_OFFSET_ALIGNMENT": { "value": 35380, "comment": "Uniforms:" },
  "ACTIVE_UNIFORM_BLOCKS": { "value": 35382, "comment": "Uniforms:" },
  "UNIFORM_TYPE": { "value": 35383, "comment": "Uniforms:" },
  "UNIFORM_SIZE": { "value": 35384, "comment": "Uniforms:" },
  "UNIFORM_BLOCK_INDEX": { "value": 35386, "comment": "Uniforms:" },
  "UNIFORM_OFFSET": { "value": 35387, "comment": "Uniforms:" },
  "UNIFORM_ARRAY_STRIDE": { "value": 35388, "comment": "Uniforms:" },
  "UNIFORM_MATRIX_STRIDE": { "value": 35389, "comment": "Uniforms:" },
  "UNIFORM_IS_ROW_MAJOR": { "value": 35390, "comment": "Uniforms:" },
  "UNIFORM_BLOCK_BINDING": { "value": 35391, "comment": "Uniforms:" },
  "UNIFORM_BLOCK_DATA_SIZE": { "value": 35392, "comment": "Uniforms:" },
  "UNIFORM_BLOCK_ACTIVE_UNIFORMS": { "value": 35394, "comment": "Uniforms:" },
  "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES": { "value": 35395, "comment": "Uniforms:" },
  "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER": { "value": 35396, "comment": "Uniforms:" },
  "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER": { "value": 35398, "comment": "Uniforms:" },
  "OBJECT_TYPE": { "value": 37138, "comment": "Sync objects:" },
  "SYNC_CONDITION": { "value": 37139, "comment": "Sync objects:" },
  "SYNC_STATUS": { "value": 37140, "comment": "Sync objects:" },
  "SYNC_FLAGS": { "value": 37141, "comment": "Sync objects:" },
  "SYNC_FENCE": { "value": 37142, "comment": "Sync objects:" },
  "SYNC_GPU_COMMANDS_COMPLETE": { "value": 37143, "comment": "Sync objects:" },
  "UNSIGNALED": { "value": 37144, "comment": "Sync objects:" },
  "SIGNALED": { "value": 37145, "comment": "Sync objects:" },
  "ALREADY_SIGNALED": { "value": 37146, "comment": "Sync objects:" },
  "TIMEOUT_EXPIRED": { "value": 37147, "comment": "Sync objects:" },
  "CONDITION_SATISFIED": { "value": 37148, "comment": "Sync objects:" },
  "WAIT_FAILED": { "value": 37149, "comment": "Sync objects:" },
  "SYNC_FLUSH_COMMANDS_BIT": { "value": 1, "comment": "Sync objects:" },
  "COLOR": { "value": 6144, "comment": "Miscellaneous constants:" },
  "DEPTH": { "value": 6145, "comment": "Miscellaneous constants:" },
  "STENCIL": { "value": 6146, "comment": "Miscellaneous constants:" },
  "MIN": { "value": 32775, "comment": "Miscellaneous constants:" },
  "MAX": { "value": 32776, "comment": "Miscellaneous constants:" },
  "DEPTH_COMPONENT24": { "value": 33190, "comment": "Miscellaneous constants:" },
  "STREAM_READ": { "value": 35041, "comment": "Miscellaneous constants:" },
  "STREAM_COPY": { "value": 35042, "comment": "Miscellaneous constants:" },
  "STATIC_READ": { "value": 35045, "comment": "Miscellaneous constants:" },
  "STATIC_COPY": { "value": 35046, "comment": "Miscellaneous constants:" },
  "DYNAMIC_READ": { "value": 35049, "comment": "Miscellaneous constants:" },
  "DYNAMIC_COPY": { "value": 35050, "comment": "Miscellaneous constants:" },
  "DEPTH_COMPONENT32F": { "value": 36012, "comment": "Miscellaneous constants:" },
  "DEPTH32F_STENCIL8": { "value": 36013, "comment": "Miscellaneous constants:" },
  "INVALID_INDEX": { "value": 4294967295, "comment": "Miscellaneous constants:" },
  "TIMEOUT_IGNORED": { "value": -1, "comment": "Miscellaneous constants:" },
  "MAX_CLIENT_WAIT_TIMEOUT_WEBGL": { "value": 37447, "comment": "Miscellaneous constants:" },
  "VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE": {
    "value": 35070,
    "comment": "ANGLE_instanced_arrays: Describes the frequency divisor used for instanced rendering."
  },
  "UNMASKED_VENDOR_WEBGL": {
    "value": 37445,
    "comment": "WEBGL_debug_renderer_info: Passed to getParameter to get the vendor string of the graphics driver."
  },
  "UNMASKED_RENDERER_WEBGL": {
    "value": 37446,
    "comment": "WEBGL_debug_renderer_info: Passed to getParameter to get the renderer string of the graphics driver."
  },
  "MAX_TEXTURE_MAX_ANISOTROPY_EXT": {
    "value": 34047,
    "comment": "EXT_texture_filter_anisotropic: Returns the maximum available anisotropy."
  },
  "TEXTURE_MAX_ANISOTROPY_EXT": {
    "value": 34046,
    "comment": "EXT_texture_filter_anisotropic: Passed to texParameter to set the desired maximum anisotropy for a texture."
  },
  "COMPRESSED_RGB_S3TC_DXT1_EXT": {
    "value": 33776,
    "comment": "WEBGL_compressed_texture_s3tc: A DXT1-compressed image in an RGB image format."
  },
  "COMPRESSED_RGBA_S3TC_DXT1_EXT": {
    "value": 33777,
    "comment": "WEBGL_compressed_texture_s3tc: A DXT1-compressed image in an RGB image format with a simple on/off alpha value."
  },
  "COMPRESSED_RGBA_S3TC_DXT3_EXT": {
    "value": 33778,
    "comment": "WEBGL_compressed_texture_s3tc: A DXT3-compressed image in an RGBA image format. Compared to a 32-bit RGBA texture, it offers 4:1 compression."
  },
  "COMPRESSED_RGBA_S3TC_DXT5_EXT": {
    "value": 33779,
    "comment": "WEBGL_compressed_texture_s3tc: A DXT5-compressed image in an RGBA image format. It also provides a 4:1 compression, but differs to the DXT3 compression in how the alpha compression is done."
  },
  "COMPRESSED_R11_EAC": {
    "value": 37488,
    "comment": "WEBGL_compressed_texture_etc: One-channel (red) unsigned format compression."
  },
  "COMPRESSED_SIGNED_R11_EAC": {
    "value": 37489,
    "comment": "WEBGL_compressed_texture_etc: One-channel (red) signed format compression."
  },
  "COMPRESSED_RG11_EAC": {
    "value": 37490,
    "comment": "WEBGL_compressed_texture_etc: Two-channel (red and green) unsigned format compression."
  },
  "COMPRESSED_SIGNED_RG11_EAC": {
    "value": 37491,
    "comment": "WEBGL_compressed_texture_etc: Two-channel (red and green) signed format compression."
  },
  "COMPRESSED_RGB8_ETC2": {
    "value": 37492,
    "comment": "WEBGL_compressed_texture_etc: Compresses RBG8 data with no alpha channel."
  },
  "COMPRESSED_RGBA8_ETC2_EAC": {
    "value": 37493,
    "comment": "WEBGL_compressed_texture_etc: Compresses RGBA8 data. The RGB part is encoded the same as RGB_ETC2, but the alpha part is encoded separately."
  },
  "COMPRESSED_SRGB8_ETC2": {
    "value": 37494,
    "comment": "WEBGL_compressed_texture_etc: Compresses sRBG8 data with no alpha channel."
  },
  "COMPRESSED_SRGB8_ALPHA8_ETC2_EAC": {
    "value": 37495,
    "comment": "WEBGL_compressed_texture_etc: Compresses sRGBA8 data. The sRGB part is encoded the same as SRGB_ETC2, but the alpha part is encoded separately."
  },
  "COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2": {
    "value": 37496,
    "comment": "WEBGL_compressed_texture_etc: Similar to RGB8_ETC, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent."
  },
  "COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2": {
    "value": 37497,
    "comment": "WEBGL_compressed_texture_etc: Similar to SRGB8_ETC, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent."
  },
  "COMPRESSED_RGB_PVRTC_4BPPV1_IMG": {
    "value": 35840,
    "comment": "WEBGL_compressed_texture_pvrtc: RGB compression in 4-bit mode. One block for each 4×4 pixels."
  },
  "COMPRESSED_RGBA_PVRTC_4BPPV1_IMG": {
    "value": 35842,
    "comment": "WEBGL_compressed_texture_pvrtc: RGBA compression in 4-bit mode. One block for each 4×4 pixels."
  },
  "COMPRESSED_RGB_PVRTC_2BPPV1_IMG": {
    "value": 35841,
    "comment": "WEBGL_compressed_texture_pvrtc: RGB compression in 2-bit mode. One block for each 8×4 pixels."
  },
  "COMPRESSED_RGBA_PVRTC_2BPPV1_IMG": {
    "value": 35843,
    "comment": "WEBGL_compressed_texture_pvrtc: RGBA compression in 2-bit mode. One block for each 8×4 pixe"
  },
  "COMPRESSED_RGB_ETC1_WEBGL": {
    "value": 36196,
    "comment": "WEBGL_compressed_texture_etc1: Compresses 24-bit RGB data with no alpha channel."
  },
  "COMPRESSED_RGB_ATC_WEBGL": {
    "value": 35986,
    "comment": "WEBGL_compressed_texture_atc: Compresses RGB textures with no alpha channel."
  },
  "COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL": {
    "value": 35986,
    "comment": "WEBGL_compressed_texture_atc: Compresses RGBA textures using explicit alpha encoding (useful when alpha transitions are sharp)."
  },
  "COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL": {
    "value": 34798,
    "comment": "WEBGL_compressed_texture_atc: Compresses RGBA textures using interpolated alpha encoding (useful when alpha transitions are gradient)."
  },
  "UNSIGNED_INT_24_8_WEBGL": {
    "value": 34042,
    "comment": "WEBGL_depth_texture: Unsigned integer type for 24-bit depth texture data."
  },
  "HALF_FLOAT_OES": { "value": 36193, "comment": "OES_texture_half_float: Half floating-point type (16-bit)." },
  "RGBA32F_EXT": {
    "value": 34836,
    "comment": "WEBGL_color_buffer_float: RGBA 32-bit floating-point color-renderable format."
  },
  "RGB32F_EXT": {
    "value": 34837,
    "comment": "WEBGL_color_buffer_float: RGB 32-bit floating-point color-renderable format."
  },
  "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT": { "value": 33297, "comment": "WEBGL_color_buffer_float:" },
  "UNSIGNED_NORMALIZED_EXT": { "value": 35863, "comment": "WEBGL_color_buffer_float:" },
  "MIN_EXT": {
    "value": 32775,
    "comment": "EXT_blend_minmax: Produces the minimum color components of the source and destination colors."
  },
  "MAX_EXT": {
    "value": 32776,
    "comment": "EXT_blend_minmax: Produces the maximum color components of the source and destination colors."
  },
  "SRGB_EXT": {
    "value": 35904,
    "comment": "EXT_sRGB: Unsized sRGB format that leaves the precision up to the driver."
  },
  "SRGB_ALPHA_EXT": { "value": 35906, "comment": "EXT_sRGB: Unsized sRGB format with unsized alpha component." },
  "SRGB8_ALPHA8_EXT": { "value": 35907, "comment": "EXT_sRGB: Sized (8-bit) sRGB and alpha formats." },
  "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT": {
    "value": 33296,
    "comment": "EXT_sRGB: Returns the framebuffer color encoding."
  },
  "FRAGMENT_SHADER_DERIVATIVE_HINT_OES": {
    "value": 35723,
    "comment": "OES_standard_derivatives: Indicates the accuracy of the derivative calculation for the GLSL built-in functions: dFdx, dFdy, and fwidth."
  },
  "COLOR_ATTACHMENT0_WEBGL": { "value": 36064, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT1_WEBGL": { "value": 36065, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT2_WEBGL": { "value": 36066, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT3_WEBGL": { "value": 36067, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT4_WEBGL": { "value": 36068, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT5_WEBGL": { "value": 36069, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT6_WEBGL": { "value": 36070, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT7_WEBGL": { "value": 36071, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT8_WEBGL": { "value": 36072, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT9_WEBGL": { "value": 36073, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT10_WEBGL": { "value": 36074, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT11_WEBGL": { "value": 36075, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT12_WEBGL": { "value": 36076, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT13_WEBGL": { "value": 36077, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT14_WEBGL": { "value": 36078, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "COLOR_ATTACHMENT15_WEBGL": { "value": 36079, "comment": "WEBGL_draw_buffers: Framebuffer color attachment point" },
  "DRAW_BUFFER0_WEBGL": { "value": 34853, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER1_WEBGL": { "value": 34854, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER2_WEBGL": { "value": 34855, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER3_WEBGL": { "value": 34856, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER4_WEBGL": { "value": 34857, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER5_WEBGL": { "value": 34858, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER6_WEBGL": { "value": 34859, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER7_WEBGL": { "value": 34860, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER8_WEBGL": { "value": 34861, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER9_WEBGL": { "value": 34862, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER10_WEBGL": { "value": 34863, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER11_WEBGL": { "value": 34864, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER12_WEBGL": { "value": 34865, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER13_WEBGL": { "value": 34866, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER14_WEBGL": { "value": 34867, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "DRAW_BUFFER15_WEBGL": { "value": 34868, "comment": "WEBGL_draw_buffers: Draw buffer" },
  "MAX_COLOR_ATTACHMENTS_WEBGL": {
    "value": 36063,
    "comment": "WEBGL_draw_buffers: Maximum number of framebuffer color attachment points"
  },
  "MAX_DRAW_BUFFERS_WEBGL": { "value": 34852, "comment": "WEBGL_draw_buffers: Maximum number of draw buffers" },
  "VERTEX_ARRAY_BINDING_OES": {
    "value": 34229,
    "comment": "OES_vertex_array_object: The bound vertex array object (VAO)."
  },
  "QUERY_COUNTER_BITS_EXT": {
    "value": 34916,
    "comment": "EXT_disjoint_timer_query: The number of bits used to hold the query result for the given target."
  },
  "CURRENT_QUERY_EXT": { "value": 34917, "comment": "EXT_disjoint_timer_query: The currently active query." },
  "QUERY_RESULT_EXT": { "value": 34918, "comment": "EXT_disjoint_timer_query: The query result." },
  "QUERY_RESULT_AVAILABLE_EXT": {
    "value": 34919,
    "comment": "EXT_disjoint_timer_query: A Boolean indicating whether or not a query result is available."
  },
  "TIME_ELAPSED_EXT": { "value": 35007, "comment": "EXT_disjoint_timer_query: Elapsed time (in nanoseconds)." },
  "TIMESTAMP_EXT": { "value": 36392, "comment": "EXT_disjoint_timer_query: The current time." },
  "GPU_DISJOINT_EXT": {
    "value": 36795,
    "comment": "EXT_disjoint_timer_query: A Boolean indicating whether or not the GPU performed any disjoint operation."
  }
}
